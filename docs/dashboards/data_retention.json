{
  "title": "Data Retention & Storage Management",
  "panels": [
    {
      "type": "stat",
      "title": "Total Database Size",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT pg_size_pretty(pg_database_size('sandbox_platform'));"
        }
      ],
      "gridPos": {"x": 0, "y": 0, "w": 6, "h": 4}
    },
    {
      "type": "stat",
      "title": "Raw Logs Count",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT COUNT(*) FROM gateway_access_logs;"
        }
      ],
      "gridPos": {"x": 6, "y": 0, "w": 6, "h": 4}
    },
    {
      "type": "stat",
      "title": "Rollup Records",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT COUNT(*) FROM v_gateway_access_summary WHERE bucket > now()-interval '30 days';"
        }
      ],
      "gridPos": {"x": 12, "y": 0, "w": 6, "h": 4}
    },
    {
      "type": "stat",
      "title": "Compliance Records",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT COUNT(*) FROM auth_audit_logs;"
        }
      ],
      "gridPos": {"x": 18, "y": 0, "w": 6, "h": 4}
    },
    {
      "type": "table",
      "title": "Table Storage Analysis",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT tablename, pg_size_pretty(pg_total_relation_size('public.'||tablename)) as size, pg_total_relation_size('public.'||tablename) as size_bytes, (SELECT COUNT(*) FROM information_schema.columns WHERE table_name = t.tablename) as columns FROM pg_tables t WHERE schemaname = 'public' AND (tablename LIKE '%_logs' OR tablename LIKE '%_hourly' OR tablename LIKE '%_daily' OR tablename LIKE '%_monthly') ORDER BY size_bytes DESC;"
        }
      ],
      "gridPos": {"x": 0, "y": 4, "w": 12, "h": 8}
    },
    {
      "type": "table",
      "title": "Nigerian NDPR Compliance Status",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT 'Raw Access Logs' as data_type, '6 months' as retention_policy, CASE WHEN MIN(created_at) > NOW() - INTERVAL '6 months' THEN 'Compliant' ELSE 'Cleanup Needed' END as status, COUNT(*) as records FROM gateway_access_logs UNION ALL SELECT 'Audit Logs', '7 years', CASE WHEN MIN(created_at) > NOW() - INTERVAL '7 years' THEN 'Compliant' ELSE 'Compliant (Historical)' END, COUNT(*) FROM auth_audit_logs UNION ALL SELECT 'Hourly Aggregates (view)', 'Ephemeral', 'N/A' as status, COUNT(*) FROM v_gateway_access_summary;"
        }
      ],
      "gridPos": {"x": 12, "y": 4, "w": 12, "h": 8}
    },
    {
      "type": "timeseries",
      "title": "Data Growth Trends",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT date_trunc('day', created_at) as time, COUNT(*) as raw_logs, 0 as rollup_records FROM gateway_access_logs WHERE created_at > NOW() - INTERVAL '30 days' GROUP BY 1 ORDER BY 1;"
        }
      ],
      "gridPos": {"x": 0, "y": 12, "w": 24, "h": 8}
    },
    {
      "type": "table",
      "title": "DPI Service Data Retention",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT service as service_type, COUNT(*) as daily_records, MIN(date_trunc('day', created_at)) as oldest_record, MAX(date_trunc('day', created_at)) as newest_record, COUNT(*) as total_api_calls, COUNT(CASE WHEN status_code = 200 THEN 1 END) as successful_ops FROM v_service_access_summary WHERE created_at > NOW() - INTERVAL '30 days' GROUP BY service ORDER BY total_api_calls DESC;"
        }
      ],
      "gridPos": {"x": 0, "y": 20, "w": 12, "h": 8}
    },
    {
      "type": "table",
      "title": "Storage Optimization Recommendations",
      "targets": [
        {
          "refId": "A",
          "datasource": {
            "type": "postgres",
            "uid": "postgres"
          },
          "rawSql": "SELECT 'Partition large tables' as recommendation, 'High' as priority, 'gateway_access_logs > 1M records' as condition, CASE WHEN (SELECT COUNT(*) FROM gateway_access_logs) > 1000000 THEN 'Action Required' ELSE 'OK' END as status UNION ALL SELECT 'Archive old audit logs', 'Medium', 'auth_audit_logs > 6 months old', CASE WHEN (SELECT COUNT(*) FROM auth_audit_logs WHERE created_at < NOW() - INTERVAL '6 months') > 0 THEN 'Consider Archiving' ELSE 'OK' END UNION ALL SELECT 'Compress raw table', 'Low', 'gateway_access_logs > 100MB', CASE WHEN (SELECT pg_total_relation_size('gateway_access_logs')) > 104857600 THEN 'Consider Compression' ELSE 'OK' END;"
        }
      ],
      "gridPos": {"x": 12, "y": 20, "w": 12, "h": 8}
    }
  ],
  "time": {"from": "now-30d", "to": "now"},
  "schemaVersion": 38,
  "version": 1
}
