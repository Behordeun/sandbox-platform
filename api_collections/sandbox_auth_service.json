{
  "openapi": "3.1.0",
  "info": {
    "title": "Sandbox Auth Service",
    "description": "Authentication and Authorization service for the Sandbox Platform",
    "version": "1.0.0"
  },
  "paths": {
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Endpoint that serves Prometheus metrics.",
        "operationId": "api_get_metrics_metrics",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint.",
        "operationId": "api_get_health_health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "api_get_root_root",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/.well-known/openid_configuration": {
      "get": {
        "summary": "Openid Configuration",
        "description": "OpenID Connect Discovery endpoint.",
        "operationId": "api_get_.well_known_openid_configuration_openid_configuration",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/.well-known/jwks.json": {
      "get": {
        "summary": "Jwks",
        "description": "JSON Web Key Set endpoint.",
        "operationId": "api_get_.well_known_jwks.json_jwks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login User",
        "description": "üîê OAuth2 Compatible Login\n\nAuthenticate user with form data and return JWT tokens.\nCompatible with OAuth2 password flow for API clients.\n\n**Request Format:**\n- Content-Type: application/x-www-form-urlencoded\n- username: Email or username\n- password: User password\n\n**Response:**\n- access_token: JWT token for API access\n- refresh_token: Token for refreshing access\n- token_type: \"bearer\"\n- expires_in: Token expiration in seconds\n\n**Use Cases:**\n- OAuth2 client applications\n- API integrations requiring form-based auth\n- Third-party service authentication",
        "operationId": "authentication_post_api_v1_auth_login_login_user",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_authentication_post_api_v1_auth_login_login_user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login/json": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login User Json",
        "description": "üöÄ JSON Login for Nigerian Startups\n\nPrimary login endpoint for Nigerian DPI developers.\nAccepts JSON payload with email or username authentication.\n\n**Request Example:**\n```json\n{\n    \"identifier\": \"adebayo@fintech.ng\",  // Email or username\n    \"password\": \"SecurePass123\"\n}\n```\n\n**Features:**\n- ‚úÖ Email or username login\n- ‚úÖ JWT token generation\n- ‚úÖ Last login tracking\n- ‚úÖ Request correlation ID support\n\n**Nigerian Context:**\n- Supports Nigerian email domains (.ng, .com.ng)\n- Optimized for fintech and DPI applications\n- Audit logging for regulatory compliance",
        "operationId": "authentication_post_api_v1_auth_login_json_login_user_json",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Read User Me",
        "description": "üë§ Get Current User Profile\n\nRetrieve authenticated user's profile information.\nRequires valid JWT token in Authorization header.\n\n**Headers Required:**\n- Authorization: Bearer {access_token}\n\n**Returns:**\n- User profile with Nigerian DPI context\n- NIN/BVN verification status\n- Account activity information\n\n**Security:**\n- Token validation required\n- Active user status check\n- Soft-delete filtering applied",
        "operationId": "authentication_get_api_v1_auth_me_read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout User",
        "description": "üö™ User Logout\n\nLogout current user session.\nClient should remove tokens from storage.\n\n**Process:**\n1. Client receives logout confirmation\n2. Client removes access/refresh tokens\n3. Tokens become invalid on next request\n\n**Best Practice:**\n- Clear all stored authentication data\n- Redirect to login page\n- Invalidate any cached user data\n\n**Note:** Server-side token blacklisting available\nfor enhanced security in production.",
        "operationId": "authentication_post_api_v1_auth_logout_logout_user",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Authentication Post Api V1 Auth Logout Logout User"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth2/clients": {
      "post": {
        "tags": [
          "oauth2"
        ],
        "summary": "Create Oauth Client",
        "description": "Create a new OAuth2 client.",
        "operationId": "oauth2_post_api_v1_oauth2_clients_create_oauth_client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthClientCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/oauth2/clients/{client_id}": {
      "get": {
        "tags": [
          "oauth2"
        ],
        "summary": "Get Oauth Client",
        "description": "Get OAuth2 client by ID.",
        "operationId": "oauth2_get_api_v1_oauth2_clients_client_id_get_oauth_client",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth2/authorize": {
      "get": {
        "tags": [
          "oauth2"
        ],
        "summary": "Authorize",
        "description": "OAuth2 authorization endpoint.",
        "operationId": "oauth2_get_api_v1_oauth2_authorize_authorize",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Response Type"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Redirect Uri"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scope"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Oauth2 Get Api V1 Oauth2 Authorize Authorize"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth2/token": {
      "post": {
        "tags": [
          "oauth2"
        ],
        "summary": "Get Token",
        "description": "OAuth2 token endpoint.",
        "operationId": "oauth2_post_api_v1_oauth2_token_get_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_oauth2_post_api_v1_oauth2_token_get_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create User",
        "description": "üë• Create Nigerian Startup Account\n\nCreate new user account for Nigerian DPI developers.\nOnly accessible by platform administrators.\n\n**Request Example:**\n```json\n{\n    \"email\": \"developer@fintech.ng\",\n    \"username\": \"fintech_dev\",\n    \"password\": \"TempPass123\",\n    \"first_name\": \"Adebayo\",\n    \"last_name\": \"Ogundimu\",\n    \"role\": \"developer\"  // Optional: admin, developer\n}\n```\n\n**Features:**\n- ‚úÖ Email uniqueness validation\n- ‚úÖ Username availability check\n- ‚úÖ Automatic welcome email\n- ‚úÖ Nigerian domain support (.ng, .com.ng)\n\n**Admin Access Required:**\n- Must be authenticated as admin\n- Closed sandbox: Only 9 Nigerian startups",
        "operationId": "admin_post_api_v1_admin_users_create_user",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Users",
        "description": "üìÑ List All Nigerian Startup Users\n\nRetrieve paginated list of all registered users.\nIncludes verification status and activity metrics.\n\n**Query Parameters:**\n- skip: Number of records to skip (default: 0)\n- limit: Maximum records to return (default: 100)\n\n**Response Includes:**\n- User profiles with NIN/BVN status\n- Last login and activity data\n- Account verification levels\n- Soft-delete filtering applied\n\n**Admin Only:** Platform oversight and user management",
        "operationId": "admin_get_api_v1_admin_users_list_users",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  },
                  "title": "Response Admin Get Api V1 Admin Users List Users"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get User",
        "description": "üîç Get Specific User Details\n\nRetrieve detailed information for a specific user.\nIncludes full profile and verification status.\n\n**Path Parameters:**\n- user_id: Unique user identifier\n\n**Returns:**\n- Complete user profile\n- NIN/BVN verification status\n- Account activity history\n- Role and permissions\n\n**Use Cases:**\n- User support and troubleshooting\n- Account verification review\n- Compliance auditing",
        "operationId": "admin_get_api_v1_admin_users_user_id_get_user",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update User",
        "description": "‚úèÔ∏è Update User Profile\n\nModify user account information and settings.\nSupports partial updates with validation.\n\n**Updatable Fields:**\n- first_name, last_name\n- email (with uniqueness check)\n- username (with availability check)\n- role (admin, developer)\n- is_active status\n\n**Validation:**\n- Email format and domain validation\n- Username uniqueness across platform\n- Role permission verification\n\n**Audit Trail:** All changes logged for compliance",
        "operationId": "admin_put_api_v1_admin_users_user_id_update_user",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete User",
        "description": "üóëÔ∏è Soft Delete User Account\n\nMark user account as deleted (soft delete).\nPreserves data for audit compliance.\n\n**Process:**\n1. Sets is_deleted = true\n2. Records deletion timestamp\n3. Maintains audit trail\n4. Frees email/username for reuse\n\n**Data Retention:**\n- User data preserved for compliance\n- API access immediately revoked\n- Email/username become available\n\n**NDPR Compliant:** Nigerian Data Protection Regulation",
        "operationId": "admin_delete_api_v1_admin_users_user_id_delete_user",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Admin Delete Api V1 Admin Users User Id Delete User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}/activate": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Activate User",
        "description": "‚úÖ Activate User Account\n\nEnable user account for API access.\nRestores full platform functionality.\n\n**Effects:**\n- Enables login and API access\n- Restores DPI service usage\n- Allows NIN/BVN verification\n- Resumes audit logging\n\n**Use Cases:**\n- New account activation\n- Account restoration after suspension\n- Startup onboarding completion\n\n**Notification:** User receives activation email",
        "operationId": "admin_post_api_v1_admin_users_user_id_activate_activate_user",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Admin Post Api V1 Admin Users User Id Activate Activate User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}/deactivate": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Deactivate User",
        "description": "‚ùå Deactivate User Account\n\nSuspend user account and revoke API access.\nTemporary suspension without data loss.\n\n**Effects:**\n- Blocks login attempts\n- Revokes API access tokens\n- Suspends DPI service usage\n- Maintains audit trail\n\n**Use Cases:**\n- Policy violation suspension\n- Security incident response\n- Temporary account freeze\n\n**Reversible:** Account can be reactivated",
        "operationId": "admin_post_api_v1_admin_users_user_id_deactivate_deactivate_user",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Admin Post Api V1 Admin Users User Id Deactivate Deactivate User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}/reset-password": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Reset User Password",
        "description": "üîë Admin Password Reset\n\nReset user password for account recovery.\nSends secure notification to user email.\n\n**Request Body:**\n```json\n{\n    \"new_password\": \"NewSecurePass123\"\n}\n```\n\n**Security Process:**\n1. Validates admin permissions\n2. Hashes new password securely\n3. Updates user credentials\n4. Sends notification email\n5. Logs password change event\n\n**Best Practice:** User should change password on next login",
        "operationId": "admin_post_api_v1_admin_users_user_id_reset_password_reset_user_password",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "new_password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "New Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Admin Post Api V1 Admin Users User Id Reset Password Reset User Password"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_authentication_post_api_v1_auth_login_login_user": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_authentication_post_api_v1_auth_login_login_user"
      },
      "Body_oauth2_post_api_v1_oauth2_token_get_token": {
        "properties": {
          "grant_type": {
            "type": "string",
            "title": "Grant Type"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "redirect_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Uri"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "grant_type",
          "client_id"
        ],
        "title": "Body_oauth2_post_api_v1_oauth2_token_get_token"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "OAuthClientCreate": {
        "properties": {
          "client_name": {
            "type": "string",
            "title": "Client Name"
          },
          "client_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Description"
          },
          "client_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Uri"
          },
          "redirect_uris": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Redirect Uris"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": "openid profile email"
          },
          "grant_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Grant Types",
            "default": [
              "authorization_code",
              "refresh_token"
            ]
          },
          "response_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Response Types",
            "default": [
              "code"
            ]
          },
          "is_confidential": {
            "type": "boolean",
            "title": "Is Confidential",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "client_name",
          "redirect_uris"
        ],
        "title": "OAuthClientCreate"
      },
      "OAuthClientResponse": {
        "properties": {
          "client_name": {
            "type": "string",
            "title": "Client Name"
          },
          "client_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Description"
          },
          "client_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Uri"
          },
          "redirect_uris": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Redirect Uris"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": "openid profile email"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "grant_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Grant Types"
          },
          "response_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Response Types"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_confidential": {
            "type": "boolean",
            "title": "Is Confidential"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "client_name",
          "redirect_uris",
          "id",
          "client_id",
          "client_secret",
          "grant_types",
          "response_types",
          "is_active",
          "is_confidential",
          "created_at"
        ],
        "title": "OAuthClientResponse"
      },
      "TokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "Bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "scope": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scope"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in"
        ],
        "title": "TokenResponse"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "default": "user"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserLogin": {
        "properties": {
          "identifier": {
            "type": "string",
            "title": "Identifier"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "identifier",
          "password"
        ],
        "title": "UserLogin"
      },
      "UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "default": "user"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "nin_verified": {
            "type": "boolean",
            "title": "Nin Verified"
          },
          "bvn_verified": {
            "type": "boolean",
            "title": "Bvn Verified"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "is_active",
          "is_verified",
          "nin_verified",
          "bvn_verified",
          "created_at"
        ],
        "title": "UserResponse"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}